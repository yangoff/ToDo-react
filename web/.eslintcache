[{"D:\\Projetos\\ProjetoReact\\web\\web\\src\\index.js":"1","D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Home\\index.js":"2","D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Home\\style.js":"3","D:\\Projetos\\ProjetoReact\\web\\web\\src\\services\\api.js":"4","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Footer\\index.js":"5","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\FilterCard\\index.js":"6","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\TaskCard\\index.js":"7","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Header\\index.js":"8","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Footer\\style.js":"9","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\FilterCard\\style.js":"10","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Header\\style.js":"11","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\TaskCard\\style.js":"12","D:\\Projetos\\ProjetoReact\\web\\web\\src\\utils\\typeIcons.js":"13","D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Task\\index.js":"14","D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Task\\style.js":"15"},{"size":241,"mtime":1608155606769,"results":"16","hashOfConfig":"17"},{"size":2642,"mtime":1608155392275,"results":"18","hashOfConfig":"17"},{"size":809,"mtime":1608153586431,"results":"19","hashOfConfig":"17"},{"size":122,"mtime":1608153586430,"results":"20","hashOfConfig":"17"},{"size":253,"mtime":1608064653587,"results":"21","hashOfConfig":"17"},{"size":368,"mtime":1608067110434,"results":"22","hashOfConfig":"17"},{"size":739,"mtime":1608153586430,"results":"23","hashOfConfig":"17"},{"size":963,"mtime":1608154397510,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1608064933562,"results":"25","hashOfConfig":"17"},{"size":628,"mtime":1608153586429,"results":"26","hashOfConfig":"17"},{"size":1422,"mtime":1608154878114,"results":"27","hashOfConfig":"17"},{"size":788,"mtime":1608154982066,"results":"28","hashOfConfig":"17"},{"size":644,"mtime":1608153586431,"results":"29","hashOfConfig":"17"},{"size":2637,"mtime":1608158525771,"results":"30","hashOfConfig":"17"},{"size":1852,"mtime":1608158746206,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"3vcrd",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projetos\\ProjetoReact\\web\\web\\src\\index.js",["67"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Home from './views/Home';\nimport Task from './views/Task';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Task/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n",["68","69"],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Home\\index.js",["70"],"import React, {useState, useEffect} from 'react';\r\nimport * as S from './style';\r\n\r\n//Api\r\nimport api from '../../services/api';\r\n\r\n\r\n//Start Components\r\nimport Header from '../../components/Header';\r\nimport Footer from '../../components/Footer';\r\nimport FilterCard from '../../components/FilterCard';\r\nimport TaskCard from '../../components/TaskCard';\r\n//End Components\r\n\r\n\r\nfunction Home() {\r\n  const [filterActived,setFilterActived ] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [lateCount, setlateCount] = useState([]);\r\n\r\n  async function loadTasks(){\r\n    await api.get(`/task/filter/${filterActived}/25:c1:75:e3:d3:1d`)\r\n    .then( response =>{\r\n      setTasks(response.data);\r\n      \r\n    })\r\n  }\r\n\r\n  async function lateVerify(){\r\n    await api.get(`/task/filter/late/25:c1:75:e3:d3:1d`)\r\n    .then( response =>{\r\n      setlateCount(response.data.length);\r\n      console.log(response.data.length);\r\n      \r\n    })\r\n  }\r\n\r\n  function Notification(){\r\n    setFilterActived('late');\r\n  }\r\n\r\n  useEffect(()=>{\r\n    loadTasks();\r\n    lateVerify();\r\n  },[filterActived]);\r\n\r\n    return (\r\n      <S.Container>\r\n        <Header lateCount={lateCount} clickNotification={Notification}/>\r\n          <S.FilterArea>\r\n            <button type=\"button\" onClick={()=> setFilterActived(\"all\")}>\r\n            <FilterCard title=\"Todos\" actived={filterActived === 'all'}  />\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={()=> setFilterActived(\"today\")} >  \r\n              <FilterCard title=\"Hoje\" actived={filterActived === 'today'} />\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={()=> setFilterActived(\"week\")} >  \r\n              <FilterCard title=\"Semana\" actived={filterActived === 'week'} />\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={()=> setFilterActived(\"month\")} >  \r\n              <FilterCard title=\"Mes\" actived={filterActived === 'month'} />\r\n            </button>\r\n\r\n            <button type=\"button\" onClick={()=> setFilterActived(\"year\")} > \r\n              <FilterCard title=\"Ano\" actived={filterActived === 'year'} />\r\n            </button>\r\n          </S.FilterArea>\r\n          \r\n          <S.Title>\r\n            <h3>{filterActived === 'late' ? 'TAREFAS ATRASADAS' : 'TAREFAS'}</h3>\r\n          </S.Title>\r\n          \r\n          <S.Content>\r\n          {\r\n            tasks.map(t =>( \r\n            <TaskCard\r\n            type={t.type}\r\n            title={t.title}\r\n            when={t.when}\r\n            />))\r\n          }\r\n\r\n          </S.Content>\r\n        <Footer/>\r\n      </S.Container>\r\n      \r\n    )\r\n  }\r\n  \r\n  export default Home;\r\n  ","D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Home\\style.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\services\\api.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Footer\\index.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\FilterCard\\index.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\TaskCard\\index.js",["71","72"],"import React, {useMemo} from 'react';\r\nimport { format } from 'date-fns';\r\nimport * as S from './style';\r\n\r\nimport typeIcons from '../../utils/typeIcons';\r\n\r\n\r\n\r\nfunction TaskCard({type, title, when}) {\r\n    const date = useMemo(()=>format( new Date(when), 'dd/MM/yyyy'));\r\n    const hour = useMemo(()=>format( new Date(when), 'HH:mm'));\r\n\r\n    return (\r\n        <S.Container>\r\n\r\n           <S.TopCard>\r\n               <img src={typeIcons[type]} alt=\"Icone da Tarefa\"></img>\r\n               <h3>{title}</h3>\r\n           </S.TopCard>\r\n           <S.BottonCard>\r\n               <strong>{date}</strong>\r\n               <span>{hour}</span>\r\n           </S.BottonCard>\r\n\r\n        </S.Container>\r\n      )\r\n  }\r\n  \r\n  export default TaskCard;\r\n  ","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Header\\index.js",["73","74","75"],"import React from 'react';\r\nimport * as S from './style';\r\nimport logo from \"../../assets/logo.png\";\r\nimport bell from \"../../assets/bell.png\";\r\n\r\n\r\n\r\nfunction Header({lateCount, clickNotification}) {\r\n    return (\r\n        <S.Container>\r\n\r\n            <S.LeftSide>\r\n               <img src={logo} alt=\"Logo\"></img>\r\n            </S.LeftSide>\r\n\r\n            <S.RigthSide>\r\n              <a href=\"#\" >INICIO</a>\r\n              <span className=\"dividir\"></span>\r\n              <a href=\"#\" >NOVA TAREFA</a>\r\n              <span className=\"dividir\"></span>\r\n              <a href=\"#\" >SINCRONIZAR CELULAR</a>\r\n              <span className=\"dividir\"></span>\r\n              <button href=\"#\" id=\"notification\" onClick={clickNotification}>\r\n                  <img src={bell} alt=\"Notificacao\"></img>\r\n                  <span>{lateCount}</span>\r\n              </button>\r\n            </S.RigthSide>\r\n\r\n        </S.Container>\r\n      )\r\n  }\r\n  \r\n  export default Header;\r\n  ","D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Footer\\style.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\FilterCard\\style.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\Header\\style.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\components\\TaskCard\\style.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\utils\\typeIcons.js",[],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Task\\index.js",["76","77"],"D:\\Projetos\\ProjetoReact\\web\\web\\src\\views\\Task\\style.js",[],{"ruleId":"78","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":12},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":45,"column":5,"nodeType":"88","endLine":45,"endColumn":20,"suggestions":"89"},{"ruleId":"86","severity":1,"message":"90","line":10,"column":18,"nodeType":"80","endLine":10,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":11,"column":18,"nodeType":"80","endLine":11,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":17,"column":15,"nodeType":"93","endLine":17,"endColumn":28},{"ruleId":"91","severity":1,"message":"92","line":19,"column":15,"nodeType":"93","endLine":19,"endColumn":28},{"ruleId":"91","severity":1,"message":"92","line":21,"column":15,"nodeType":"93","endLine":21,"endColumn":28},{"ruleId":"94","severity":1,"message":"95","line":47,"column":29,"nodeType":"93","endLine":49,"endColumn":30},{"ruleId":"96","severity":1,"message":"97","line":48,"column":57,"nodeType":"98","messageId":"99","endLine":48,"endColumn":59},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["102"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [filterActived, loadTasks]",{"range":"105","text":"106"},[1083,1098],"[filterActived, loadTasks]"]